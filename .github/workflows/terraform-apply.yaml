name: terraform

on:
  push:
    branches:
      master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TERRAFORM_PRE_RUN: |
    # Install latest Azure CLI
    curl -skL https://aka.ms/InstallAzureCLIDeb | bash
    # Az Login
    az login --service-principal -u "${{ secrets.AZURE_CLIENT_ID }}" -p "${{ secrets.AZURE_CLIENT_SECRET }}" --tenant "${{ secrets.AZURE_TENANT_ID }}"


jobs:
  tf-apply:
    runs-on: ubuntu-latest
    name: terraform apply

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: "${{ secrets.SP_AZURE_CREDS }}"

      - name: terraform plan
        uses: dflook/terraform-apply@v1
        
  tf-destroy:
    if: github.event.inputs.DESTROY_CONFIG == 'true'
    needs: tf-apply
    name: terraform destroy
    runs-on: ubuntu-latest

    steps:

      # Post import terraform destroy - plan & apply
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Destroy Plan
        id: plan
        run: |
          echo "getting state list..."
          terraform state list
          terraform state list > statelist
          ls -al
          cat statelist
          # echo "parse state list file...."
          # echo "read state list file into variable"
          # read -r -a state_list <<< "$(cat akamai-terraform/examples/standalone/statelist)"

          #  echo "--------------------"          
          
          # echo "---------------"
          # echo "${state_list[@]}"
          # echo "---------------"
          
          #for state in "${state_list[@]}"; do
          # if [[ "$state" != *".data."* && "$state" != *"gtm_domain"* && "$state" != *"gtm_datacenter"* ]]
          #  then
          #   echo "generating destroy plan for $state"
          #    terraform -chdir='akamai-terraform/examples/standalone' plan -target="$state" -var-file="../../../$TFVARS_FILE" -destroy -out="$state.plan"          
          #  fi
          # done          
   
